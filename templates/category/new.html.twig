{% extends 'base.html.twig' %}

{% block title %}New Category{% endblock %}

{% block body %}
    <div class="container mt-4">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h1>Create New Category</h1>
            <a href="{{ path('app_category_index') }}" class="btn btn-outline-secondary">Back to list</a>
        </div>

        {{ form_start(form) }}
        <div class="row">
            <div class="col-md-8">
                <div class="card">
                    <div class="card-body">
                        <div class="mb-3">
                            {{ form_label(form.name) }}
                            {{ form_widget(form.name) }}
                            {{ form_errors(form.name) }}
                        </div>

                        <div class="mb-3">
                            {{ form_label(form.type) }}
                            {{ form_widget(form.type) }}
                            {{ form_errors(form.type) }}
                            <div class="form-text">Select the type of NFT this category will contain</div>
                        </div>

                        <div class="mb-3">
                            {{ form_label(form.description) }}
                            {{ form_widget(form.description) }}
                            {{ form_errors(form.description) }}
                        </div>

                        <div class="mb-3">
                            <label class="form-label required">Allowed MIME Types</label>
                            <div class="mime-types-wrapper"
                                 data-prototype="{{ form_widget(form.allowedMimeTypes.vars.prototype)|e('html_attr') }}">
                                {% if form.allowedMimeTypes|length > 0 %}
                                    {% for mimeTypeField in form.allowedMimeTypes %}
                                        <div class="input-group mb-2">
                                            {{ form_widget(mimeTypeField) }}
                                            <button type="button" class="btn btn-danger remove-mime-type">
                                                <i class="fas fa-times"></i> Remove
                                            </button>
                                        </div>
                                    {% endfor %}
                                {% endif %}
                            </div>
                            {{ form_errors(form.allowedMimeTypes) }}
                            <button type="button" class="btn btn-secondary mt-2 add-mime-type">
                                <i class="fas fa-plus"></i> Add MIME Type
                            </button>
                            <div class="form-text mt-2">
                                Common MIME types:<br>
                                - Images: image/jpeg, image/png, image/webp<br>
                                - Videos: video/mp4, video/webm<br>
                                - Audio: audio/mpeg, audio/wav
                            </div>
                        </div>

                        <div class="mt-4">
                            <button type="submit" class="btn btn-primary">Create Category</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        {{ form_end(form) }}
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            let mimeTypesWrapper = document.querySelector('.mime-types-wrapper');
            let addButton = document.querySelector('.add-mime-type');
            let prototype = mimeTypesWrapper.dataset.prototype;
            let index = document.querySelectorAll('.mime-types-wrapper .input-group').length;

            // Function to update MIME types based on selected category type
            function updateDefaultMimeTypes() {
                const typeSelect = document.querySelector('#category_type');
                const selectedType = typeSelect.value;
                
                if (selectedType && mimeTypesWrapper.children.length === 0) {
                    let defaultTypes = [];
                    switch(selectedType) {
                        case 'image':
                            defaultTypes = ['image/jpeg', 'image/png', 'image/webp'];
                            break;
                        case 'video':
                            defaultTypes = ['video/mp4', 'video/webm'];
                            break;
                        case 'audio':
                            defaultTypes = ['audio/mpeg', 'audio/wav'];
                            break;
                    }
                    
                    // Add default MIME types
                    defaultTypes.forEach(type => {
                        addMimeTypeField(type);
                    });
                }
            }

            function addMimeTypeField(value = '') {
                let newForm = prototype.replace(/__name__/g, index);
                let div = document.createElement('div');
                div.classList.add('input-group', 'mb-2');
                div.innerHTML = newForm + '<button type="button" class="btn btn-danger remove-mime-type"><i class="fas fa-times"></i> Remove</button>';
                mimeTypesWrapper.appendChild(div);
                
                if (value) {
                    div.querySelector('input').value = value;
                }
                
                index++;
            }

            addButton.addEventListener('click', function() {
                addMimeTypeField();
            });

            mimeTypesWrapper.addEventListener('click', function(e) {
                if (e.target.classList.contains('remove-mime-type') || e.target.closest('.remove-mime-type')) {
                    e.target.closest('.input-group').remove();
                }
            });

            // Listen for category type changes
            document.querySelector('#category_type').addEventListener('change', updateDefaultMimeTypes);
            
            // Initial setup if type is already selected
            updateDefaultMimeTypes();
        });
    </script>
{% endblock %}
