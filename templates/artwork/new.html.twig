{% extends 'base.html.twig' %}

{% block title %}Create New Artwork{% endblock %}

{% block body %}
    <main id="main" class="main">
        <div class="pagetitle">
            <h1>Create New Artwork</h1>
            <nav>
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="{{ path('app_artwork_index') }}">Artworks</a></li>
                    <li class="breadcrumb-item active">Create New</li>
                </ol>
            </nav>
        </div>

        <section class="section">
            <div class="row">
                <div class="col-lg-12">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title">Artwork Details</h5>

                            {% for label, messages in app.flashes %}
                                {% for message in messages %}
                                    <div class="alert alert-{{ label }} alert-dismissible fade show" role="alert">
                                        {{ message }}
                                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                                    </div>
                                {% endfor %}
                            {% endfor %}

                            {{ form_start(form, {'attr': {'class': 'needs-validation', 'novalidate': 'novalidate'}}) }}
                            <div class="row mb-3">
                                <div class="col-md-6">
                                    <div class="form-group mb-3">
                                        {{ form_label(form.title, 'Title', {'label_attr': {'class': 'form-label'}}) }}
                                        {{ form_widget(form.title, {'attr': {'class': 'form-control', 'placeholder': 'Enter artwork title'}}) }}
                                        {{ form_errors(form.title) }}
                                    </div>

                                    <div class="form-group mb-3">
                                        {{ form_label(form.category, 'Category', {'label_attr': {'class': 'form-label'}}) }}
                                        {{ form_widget(form.category, {'attr': {'class': 'form-select'}}) }}
                                        {{ form_errors(form.category) }}
                                        <div class="form-text text-muted mime-types-info"></div>
                                    </div>

                                    <div class="form-group mb-3">
                                        {{ form_label(form.price, 'Price', {'label_attr': {'class': 'form-label'}}) }}
                                        {{ form_widget(form.price, {'attr': {'class': 'form-control', 'placeholder': 'Enter price'}}) }}
                                        {{ form_errors(form.price) }}
                                    </div>
                                </div>

                                <div class="col-md-6">
                                    <div class="form-group mb-3">
                                        {{ form_label(form.description, 'Description', {'label_attr': {'class': 'form-label'}}) }}
                                        {{ form_widget(form.description, {'attr': {'class': 'form-control', 'rows': 4, 'placeholder': 'Enter artwork description'}}) }}
                                        {{ form_errors(form.description) }}
                                    </div>

                                    <div class="form-group mb-3">
                                        {{ form_label(form.imageFile, 'Media File', {'label_attr': {'class': 'form-label'}}) }}
                                        {{ form_widget(form.imageFile, {'attr': {'class': 'form-control'}}) }}
                                        {{ form_errors(form.imageFile) }}
                                        <div class="form-text text-muted">Select a file that matches the category's allowed types</div>
                                    </div>
                                </div>
                            </div>

                            <div class="text-end">
                                <a href="{{ path('app_artwork_index') }}" class="btn btn-secondary">
                                    <i class="bi bi-x-circle"></i> Cancel
                                </a>
                                <button type="submit" class="btn btn-primary">
                                    <i class="bi bi-check-circle"></i> Create Artwork
                                </button>
                            </div>
                            {{ form_end(form) }}
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </main>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const categorySelect = document.querySelector('#artwork_category');
            const mimeTypesInfo = document.querySelector('.mime-types-info');

            function updateMimeTypes(categoryId) {
                if (categoryId) {
                    fetch(`{{ path('app_category_info', {'id': 'placeholder'}) }}`.replace('placeholder', categoryId))
                        .then(response => {
                            if (!response.ok) {
                                throw new Error('Network response was not ok');
                            }
                            return response.json();
                        })
                        .then(data => {
                            if (data.allowedMimeTypes && Array.isArray(data.allowedMimeTypes)) {
                                mimeTypesInfo.innerHTML = 'Allowed file types: ' + data.allowedMimeTypes.join(', ');
                            } else {
                                mimeTypesInfo.innerHTML = 'No file types available for this category';
                            }
                        })
                        .catch(error => {
                            console.error('Error:', error);
                            mimeTypesInfo.innerHTML = 'Error loading allowed file types';
                        });
                } else {
                    mimeTypesInfo.innerHTML = 'Select a category to see allowed file types';
                }
            }

            categorySelect.addEventListener('change', function() {
                updateMimeTypes(this.value);
            });

            // Initialize MIME types if category is already selected
            if (categorySelect.value) {
                updateMimeTypes(categorySelect.value);
            }
        });
    </script>
{% endblock %}
